services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9094:9094"
      - "9092:9092"
    environment:
      # KRaft configuration
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=SSL://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=SSL://kafka:9092,EXTERNAL://${EXTERNAL_HOST_IP}:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:SSL,SSL:SSL,EXTERNAL:SSL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=SSL
      - KAFKA_CLIENT_LISTENER_NAME=SSL
      # SSL
      - KAFKA_SSL_KEYSTORE_LOCATION=/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - KAFKA_SSL_TRUSTSTORE_LOCATION=/bitnami/kafka/config/certs/kafka.truststore.jks:ro
      - KAFKA_SSL_CLIENT_AUTH=required
      - KAFKA_TLS_CONTROLLER_CLIENT_AUTH=required
      - KAFKA_TLS_TYPE=JKS
      - KAFKA_CERTIFICATE_PASSWORD=${CERTIFICATE_PASSWORD}
    networks:
      - quantum-net
    volumes:
      - ../secrets/kafka.keystore.jks:/bitnami/kafka/config/certs/kafka.keystore.jks
      - ../secrets/kafka.truststore.jks:/bitnami/kafka/config/certs/kafka.truststore.jks
  quantum-pipeline:
    container_name: quantum-pipeline
    command: ["--file", "data/molecules.json", "--kafka", "--max-iterations", "1", "--ssl", "--ssl-dir", "/etc/quantum-pipeline/secrets/", "--ssl-password", "${CERTIFICATE_PASSWORD}"]
    build:
      context: ../
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ../secrets/:/etc/quantum-pipeline/secrets/
      - ../gen/:/usr/src/quantum-pipeline/gen/
    environment:
      IBM_RUNTIME_CHANNEL: ${IBM_RUNTIME_CHANNEL}
      IBM_RUNTIME_INSTANCE: ${IBM_RUNTIME_INSTANCE}
      IBM_RUNTIME_TOKEN: ${IBM_RUNTIME_TOKEN}
      KAFKA_SERVERS: ${KAFKA_SERVERS:-kafka:9092}
    env_file:
      - ../.env
    networks:
      - quantum-net
networks:
  quantum-net:
    name: quantum-pipeline-network
    driver: bridge
