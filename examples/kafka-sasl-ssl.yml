services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9094:9094"
      - "9092:9092"
    environment:
      # KRaft
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=SASL_SSL://kafka:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=SASL_SSL://kafka:9092,EXTERNAL://${EXTERNAL_HOST_IP}:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:SASL_PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=SASL_SSL
      - KAFKA_CLIENT_LISTENER_NAME=SASL_SSL
      # SASL Authentication
      - KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL=PLAIN
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CONTROLLER_USER=${KAFKA_CONTROLLER_USER}
      - KAFKA_CONTROLLER_PASSWORD=${KAFKA_CONTROLLER_PASSWORD}
      - KAFKA_INTER_BROKER_USER=${KAFKA_BROKER_USER}
      - KAFKA_INTER_BROKER_PASSWORD=${KAFKA_BROKER_PASSWORD}
      - KAFKA_CLIENT_USERS=${KAFKA_CLIENT_USER}
      - KAFKA_CLIENT_PASSWORDS=${KAFKA_CLIENT_PASSWORD}
      # SSL Configuration
      - KAFKA_TLS_TYPE=JKS
      - KAFKA_CERTIFICATE_PASSWORD=${CERTIFICATE_PASSWORD}
    networks:
      - quantum-net
    volumes:
      - ../secrets/kafka.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ../secrets/kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro
  quantum-pipeline:
    container_name: quantum-pipeline
    command: ["--file", "data/molecules.json", "--kafka", "--max-iterations", "1", "--sasl-ssl", "--ssl-dir", "/usr/src/quantum-pipeline/secrets/", "--ssl-password", "${CERTIFICATE_PASSWORD}", "--sasl-mechanism", "PLAIN", "--sasl-plain-username", "${KAFKA_CLIENT_USER}", "--sasl-plain-password", "${KAFKA_CLIENT_PASSWORD}"]
    build:
      context: ../
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ../secrets/:/usr/src/quantum-pipeline/secrets/
      - ../gen/:/usr/src/quantum-pipeline/gen/
    environment:
      IBM_RUNTIME_CHANNEL: ${IBM_RUNTIME_CHANNEL}
      IBM_RUNTIME_INSTANCE: ${IBM_RUNTIME_INSTANCE}
      IBM_RUNTIME_TOKEN: ${IBM_RUNTIME_TOKEN}
      KAFKA_SERVERS: ${KAFKA_SERVERS}
    networks:
      - quantum-net
    depends_on:
      - kafka
networks:
  quantum-net:
    name: quantum-pipeline-network
    driver: bridge
